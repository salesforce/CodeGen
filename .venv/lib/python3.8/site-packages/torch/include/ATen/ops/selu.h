#pragma once

// @generated by torchgen/gen.py from Function.h

#include <ATen/Context.h>
#include <ATen/DeviceGuard.h>
#include <ATen/TensorUtils.h>
#include <ATen/TracerMode.h>
#include <ATen/core/Generator.h>
#include <ATen/core/Reduction.h>
#include <ATen/core/Tensor.h>
#include <c10/core/Scalar.h>
#include <c10/core/Storage.h>
#include <c10/core/TensorOptions.h>
#include <c10/util/Deprecated.h>
#include <c10/util/Optional.h>



#include <ATen/ops/selu_ops.h>

namespace at {


// aten::selu(Tensor self) -> Tensor
TORCH_API inline at::Tensor selu(const at::Tensor & self) {
    return at::_ops::selu::call(self);
}

// aten::selu_(Tensor(a!) self) -> Tensor(a!)
TORCH_API inline at::Tensor & selu_(at::Tensor & self) {
    return at::_ops::selu_::call(self);
}

}
