#pragma once

// @generated by torchgen/gen.py from Function.h

#include <ATen/Context.h>
#include <ATen/DeviceGuard.h>
#include <ATen/TensorUtils.h>
#include <ATen/TracerMode.h>
#include <ATen/core/Generator.h>
#include <ATen/core/Reduction.h>
#include <ATen/core/Tensor.h>
#include <c10/core/Scalar.h>
#include <c10/core/Storage.h>
#include <c10/core/TensorOptions.h>
#include <c10/util/Deprecated.h>
#include <c10/util/Optional.h>



#include <ATen/ops/_torch_cuda_cu_linker_symbol_op_ops.h>

namespace at {


// aten::_torch_cuda_cu_linker_symbol_op(Tensor self) -> Tensor
TORCH_API inline at::Tensor _torch_cuda_cu_linker_symbol_op(const at::Tensor & self) {
    return at::_ops::_torch_cuda_cu_linker_symbol_op::call(self);
}

}
