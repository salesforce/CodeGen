#pragma once

// @generated by torchgen/gen.py from Function.h

#include <ATen/Context.h>
#include <ATen/DeviceGuard.h>
#include <ATen/TensorUtils.h>
#include <ATen/TracerMode.h>
#include <ATen/core/Generator.h>
#include <ATen/core/Reduction.h>
#include <ATen/core/Tensor.h>
#include <c10/core/Scalar.h>
#include <c10/core/Storage.h>
#include <c10/core/TensorOptions.h>
#include <c10/util/Deprecated.h>
#include <c10/util/Optional.h>



#include <ATen/ops/_sparse_mask_helper_ops.h>

namespace at {


// aten::_sparse_mask_helper(Tensor t, Tensor mask_indices) -> Tensor
TORCH_API inline at::Tensor _sparse_mask_helper(const at::Tensor & t, const at::Tensor & mask_indices) {
    return at::_ops::_sparse_mask_helper::call(t, mask_indices);
}

}
